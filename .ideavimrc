" =========== vim settings ===========
set scrolloff=5
set incsearch
set hlsearch

set number
" set rnu

set ignorecase
set smartcase
set visualbell
set showmode
set showcmd
set nrformats
set wrapscan
set matchpairs

" IdeaVim only commands:
"set clipboard=ideaput
set clipboard+=unnamed
set ideamarks
set ideajoin

" ========== plugins ===========
set NERDTree
set surround
set easymotion
set highlightedyank
set sneak
set which-key

" keep english
set keep-english-in-normal
set keep-english-in-normal-and-restore-in-insert
" which key plug
set notimeout
set timeoutlen=1000

" :NERDTree
" :NERDTreeClose
" :NERDTreeFind
" :NERDTreeRefreshRoot
" :NERDTreeFind<CR>
" :NERDTreeToggle<CR>


" =========== vim keybindings ===========
let mapleader=" "

"=========== normal mode ===========

"nmap gc :action GotoClass<cr>
"nmap gf :action GotoFile<cr>
"nmap gs :action GotoSymbol<cr>
"nmap ga :action GotoAction<cr>

nmap gh :action ShowErrorDescription<cr>
nmap gq :action ReformatCode<CR>
nmap gQ :action ShowReformatFileDialog<cr>
nmap <leader>p :action ParameterInfo<cr>

noremap H ^
noremap L $
nnoremap Y y$
nnoremap <leader>n :NERDTreeFocus<CR>
nnoremap <leader>t :NERDTree<CR>

" =========== insert mode ==========
inoremap jj <ESC>
inoremap <c-i> :action ImplementMethods<cr>
inoremap <c-o> :action OverrideMethods<cr>
inoremap <c-j> :action SurroundWithLiveTemplate<cr>

" =========== visual mode ===========

" =========== map action ===========

"map gc <action>(CommentByLineComment)
"map gC <action>(CommentByBlockComment)
map <leader>i <action>(GotoImplementation)
map <leader>b <action>(GotoDeclaration)

map <leader>q <action>(CloseContent)
map <leader>w <action>(SaveAll)

map <leader>c <action>(GotoClass)
map <leader>f <action>(GotoFile)
map <leader>a <action>(GotoAction)
map <leader>s <action>(GotoSymbol)

map <leader>h <action>(TypeHierarchy)

" ========== set handler ==========
sethandler <c-c> v:ide
sethandler <c-v> i:ide
sethandler <c-x> v:ide

sethandler <c-j> i:ide
sethandler <c-p> i:ide
sethandler <c-e> n:ide
sethandler <c-a> n:ide




